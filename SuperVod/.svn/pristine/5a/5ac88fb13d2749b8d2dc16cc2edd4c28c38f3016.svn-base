/**
 * Description: Framework.java
 * Copyright (c) 永新视博
 * All Rights Reserved.
 * @version 1.0  2011-11-30 下午4:27:12 zhaojunfeng created
 */
package com.stv.supervod.activity;
import java.util.ArrayList;

import com.stv.supervod.common.BaseCommon;
import com.stv.supervod.doc.LogLevel;
import com.stv.supervod.utils.TabStack;

import android.app.ActivityGroup;
import android.content.Context;
import android.content.Intent;
import android.content.res.Resources.NotFoundException;
import android.graphics.Color;
import android.graphics.drawable.ColorDrawable;
import android.os.Bundle;
import android.util.DisplayMetrics;
import android.util.Log;
import android.view.Gravity;
import android.view.KeyEvent;
import android.view.View;
import android.view.ViewGroup;
import android.view.Window;
import android.view.ViewGroup.LayoutParams;
import android.view.animation.AnimationUtils;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.BaseAdapter;
import android.widget.GridView;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.Toast;
import android.widget.ViewFlipper;

/**
 * Description: 
 * Copyright (c) 永新视博
 * All Rights Reserved.
 * @version 1.0  2011-11-30 下午4:27:12 zhaojunfeng created
 */
public class Framework extends ActivityGroup{
	private static Framework currFramewrok = null;
	private static int currFocusId = 0;
	
	private static final String TAG = "Framework";
	
	private GridView mGridViewBar;
	private BarImageAdapter mBarImgAdapte;
	private ViewFlipper mViewFliper;
	private ArrayList<TabStack>  mTabStack;
	
	private final int[] bar_image_array = {
			R.drawable.tab_homepage,
			R.drawable.tab_channel,
			R.drawable.tab_search,
			R.drawable.tab_history,
			R.drawable.tab_more
	};
	
	private final int[] bar_text_array = {
			R.string.framework_tab_home,
			R.string.framework_tab_channel,
			R.string.framework_tab_search,
			R.string.framework_tab_myfav,
			R.string.framework_tab_more
	};
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		setContentView(R.layout.framework);
		currFramewrok = this;
		
		mTabStack = new ArrayList<TabStack>();
		for (int i = 0; i < bar_image_array.length; i++) {
			mTabStack.add(new TabStack());
		}
		
		mViewFliper = (ViewFlipper) findViewById(R.id.framework_view);
		
		mGridViewBar = (GridView) findViewById(R.id.framework_bar);
		mGridViewBar.setColumnWidth(bar_image_array.length);
		mGridViewBar.setSelector(new ColorDrawable(Color.TRANSPARENT));
		mGridViewBar.setGravity(Gravity.CENTER);
		mGridViewBar.setVerticalSpacing(0);// 垂直间隔
		
        int width = this.getWindowManager().getDefaultDisplay().getWidth()  
                / bar_image_array.length;  
        mBarImgAdapte = new BarImageAdapter(this, bar_image_array, width, 
        		width*4/5, bar_text_array);  
        mGridViewBar.setAdapter(mBarImgAdapte);// 设置菜单Adapter  
        mGridViewBar.setOnItemClickListener(new OnItemClickListener() {

			@Override
			public void onItemClick(AdapterView<?> arg0, View arg1, int position,
					long arg3) {
				// TODO Auto-generated method stub
				currFocusId = position;
				mTabStack.get(currFocusId).clear();
				BaseCommon.printLog(TAG, String.format("onItemClick position=", position), LogLevel.DEBAG);
				
				switch (position) {
				case 0:
					switchActivity("Homepage", new Intent(Framework.this, Homepage.class));
					break;
				case 1:
					switchActivity("Category", new Intent(Framework.this, Category.class));
					break;
				case 2:
					switchActivity("Search", new Intent(Framework.this, Search.class));
					break;
				case 3:
					switchActivity("LiveChannels", new Intent(Framework.this, LiveChannels.class));
					break;
				case 4:
					switchActivity("Further", new Intent(Framework.this, Further.class));
				default:
					break;
				}
			}
        	
		});
        
        switchActivity("Homepage", new Intent(Framework.this, Homepage.class) );
	}

	static public void switchActivity(String name, Intent intent) {
		currFramewrok.startActivity( name, intent);
	}
	
	private void startActivity( String name, Intent intent ){
		mBarImgAdapte.SetFocus(currFocusId);//选中项获得高亮  
		
		TabStack curr = mTabStack.get(currFocusId);
		if (curr.top() == name) {
			return;
		}
		
		intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
		Window window = getLocalActivityManager().startActivity(name, intent);
		View v = window.getDecorView();
		DisplayMetrics dm = new DisplayMetrics();
		getWindowManager().getDefaultDisplay().getMetrics(dm);
		LayoutParams param = new LayoutParams(LayoutParams.FILL_PARENT,
				LayoutParams.FILL_PARENT);
		v.setLayoutParams(param);
		try {
			mViewFliper.setInAnimation(AnimationUtils.loadAnimation(this,R.anim.push_left_in));
			mViewFliper.setOutAnimation(AnimationUtils.loadAnimation(this,R.anim.push_left_out));
		} catch (NotFoundException e) {
			e.printStackTrace();
		}
		
		mViewFliper.addView(v);
		mViewFliper.showNext();
		mTabStack.get(currFocusId).push(name);
		BaseCommon.printLog(TAG, name, LogLevel.DEBAG);
	}
	
	static public void switchActivityBack() {
		currFramewrok.endActivity();
	}
	
	private void endActivity(){
		if(mTabStack.get(currFocusId).size() > 1){
			int viewIndex = mViewFliper.getDisplayedChild();
			mViewFliper.setInAnimation(AnimationUtils.loadAnimation(this, R.anim.push_right_in));
			mViewFliper.setOutAnimation(AnimationUtils.loadAnimation(this,R.anim.push_right_out));
			mViewFliper.showPrevious();
			mViewFliper.removeViewAt(viewIndex);
			mTabStack.get(currFocusId).pop();
		}else {
			if( currFocusId == 0 ){
				Toast.makeText(this, "You will Quit", Toast.LENGTH_SHORT).show();
				this.finish();
			} else {
				for (TabStack it : mTabStack) {
					it.clear();
				}
				mViewFliper.removeAllViews();
				currFocusId = 0;
				switchActivity("Homepage", new Intent(Framework.this, Homepage.class) );
			}
		}
	}
	
	public boolean onKeyDown(int keyCode, KeyEvent event) {
		TabStack curr = mTabStack.get(currFocusId);
		Log.i(TAG, "onKeyDown" + curr.toString());
		if(keyCode == KeyEvent.KEYCODE_BACK){
			if(!curr.isEmpty()){
				endActivity();
			}else{
				//finish();
				Toast.makeText(this, "You will Quit", Toast.LENGTH_SHORT).show();
			}
			return true;
		}
		return super.onKeyDown(keyCode, event);
	}
	
	private class BarImageAdapter extends BaseAdapter{
	    private Context mContext;   
	    private int mSelBgResId;  
	    private int mBgResId; 
	    
	    private LinearLayout[] tabItems; 
	    
	    public BarImageAdapter(Context c,int[] picIds,int width,int height, int[] strIds) {   
	        mContext = c;   
	        mSelBgResId = R.drawable.tabview_bg_selected;  
	        mBgResId = R.drawable.tabview_bg;
	        
	        tabItems = new LinearLayout[picIds.length];
	        for(int i=0;i<picIds.length;i++)  {
	        	tabItems[i] = new LinearLayout(mContext);
	        	tabItems[i].setOrientation(LinearLayout.VERTICAL);
	        	tabItems[i].setBackgroundResource(mBgResId);
	        	
	        	ImageView iv = new ImageView(mContext);
	        	iv.setLayoutParams(new LayoutParams(LayoutParams.FILL_PARENT,LayoutParams.FILL_PARENT));
				iv.setAdjustViewBounds(false);
				iv.setScaleType(ImageView.ScaleType.FIT_CENTER);
				iv.setPadding(1, 1, 1, 1);
				iv.setImageResource(picIds[i]);
				tabItems[i].setGravity(Gravity.CENTER_HORIZONTAL);
				tabItems[i].addView(iv);
				
				TextView tv = new TextView(mContext);
				tv.setText(strIds[i]);
				tv.setTextColor(Color.WHITE);
				tv.setGravity(Gravity.CENTER);
				iv.setPadding(1, 1, 1, 1);
				tabItems[i].addView(tv);	
	        }
	    }   
	   
	    public int getCount() {   
	        return tabItems.length;   
	    }   
	   
	    public Object getItem(int position) {   
	        return position;   
	    }   
	   
	    public long getItemId(int position) {   
	        return position;   
	    }   
	   
	    /**  
	     * 设置选中的效果  
	     */    
	    public void SetFocus(int index)    
	    {    
	        for(int i=0;i<tabItems.length;i++)    
	        {    
	            if(i!=index)    
	            {    
	            	tabItems[i].setBackgroundResource(mBgResId);//恢复未选中的样式  
	            }    
	        }    
	        tabItems[index].setBackgroundResource(mSelBgResId);//设置选中的样式  
	    }    
	      
	    public View getView(int position, View convertView, ViewGroup parent) {   
	        LinearLayout v;   
	        if (convertView == null) {   
	            v= tabItems[position];  
	        } else {   
	            v = (LinearLayout) convertView;   
	        }   
	        return v;   
	    }   
		
	}
}
