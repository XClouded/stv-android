package com.stv.supervod.utils;

import android.view.View;
import android.view.ViewGroup;
import android.widget.ExpandableListView;
import android.widget.ListAdapter;
import android.widget.ListView;

/**
 * Description: 计算list控件高度 Copyright (c) 永新视博 All Rights Reserved.
 * 
 * @version 1.0 2011-12-5 下午12:36:04 mustang created
 */
public class ListUtil {

	/**
	 * Description: 计算普通的listview高度
	 * 
	 * @Version1.0 2011-12-5 下午12:37:18 mustang created
	 * @param listView
	 */
	public static void setListViewHeightBasedOnChildren(ListView listView) {
		// 获取ListView对应的Adapter
		ListAdapter listAdapter = listView.getAdapter();
		if (listAdapter == null) {
			return;
		}

		int totalHeight = 0;
		for (int i = 0, len = listAdapter.getCount(); i < len; i++) { // listAdapter.getCount()返回数据项的数目
			View listItem = listAdapter.getView(i, null, listView);
			listItem.measure(0, 0); // 计算子项View 的宽高
			totalHeight += listItem.getMeasuredHeight(); // 统计所有子项的总高度
		}

		ViewGroup.LayoutParams params = listView.getLayoutParams();
		params.height = totalHeight
				+ (listView.getDividerHeight() * (listAdapter.getCount() - 1));
		// listView.getDividerHeight()获取子项间分隔符占用的高度
		// params.height最后得到整个ListView完整显示需要的高度
		listView.setLayoutParams(params);
	}

	/**
	 * Description: 计算ExpandListView控件高度
	 * 
	 * @Version1.0 2011-12-5 下午12:37:35 mustang created
	 * @param listView
	 */
	public static void setExpandListViewHeightBasedOnChildren(
			ExpandableListView listView) {
		// 获取ListView对应的Adapter
		ListAdapter listAdapter = listView.getAdapter();
		if (listAdapter == null) {
			// pre-condition
			return;
		}

		int totalHeight = 0;
		for (int i = 0; i < listView.getExpandableListAdapter().getGroupCount(); i++) {
			View listItem1 = listAdapter.getView(i, null, listView);
			listItem1.measure(0, 0); // 计算子项View 的宽高
			totalHeight += listItem1.getMeasuredHeight(); // 统计所有子项的总高度
			for (int j = 0; j < listView.getExpandableListAdapter()
					.getChildrenCount(i); j++) {
				View listItem = listAdapter.getView(i, null, listView);
				listItem.measure(0, 0); // 计算子项View 的宽高
				totalHeight += listItem.getMeasuredHeight(); // 统计所有子项的总高度
			}
		}
		ViewGroup.LayoutParams params = listView.getLayoutParams();
		params.height = totalHeight
				+ (listView.getDividerHeight() * (listAdapter.getCount() - 1));
		// listView.getDividerHeight()获取子项间分隔符占用的高度
		// params.height最后得到整个ListView完整显示需要的高度
		listView.setLayoutParams(params);
	}

}
