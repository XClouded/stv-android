package com.stv.supervod.activity;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import android.app.Activity;
import android.app.AlertDialog;
import android.content.DialogInterface;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.view.View;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.GridView;
import android.widget.ProgressBar;
import android.widget.SimpleAdapter;

import com.stv.supervod.service.ImageServiceImpl;
import com.stv.supervod.service.RegisterServiceImpl;
import com.stv.supervod.utils.AlertUtils;

/**
 * @author Administrator
 * @description 欢迎页面
 * @authority 所有用户
 * @function 1、建立网络连接，选择服务器 2、用户份判断，记住登录信息用户自动登录到服务器
 *           3、遍历存放图片文件夹，删除最后访问时间大于本地时间3天的图片，同步数据库
 */
public class Welcome extends Activity {

	Activity act = this;
	ProgressBar progressBar;
	private static boolean netstate = true;
	private boolean loginResult = false;
	GridView gridView;

	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.welcome);
		progressBar = (ProgressBar) this.findViewById(R.id.progressBar);

		SimpleAdapter adp = new SimpleAdapter(this, getTestData(), R.layout.city_item, new String[] { "ItemText" }, new int[] { R.id.GridItemText });
		gridView = (GridView) findViewById(R.id.gridview);
		gridView.setDrawSelectorOnTop(true);
		gridView.setAdapter(adp);
		//gridView.setOnItemClickListener(new ItemClickListener());
		// 暂时看看效果，以后会删掉
		new Thread() {
			public void run() {
				try {
					sleep(1500);
					// TODO 1、这里真正要做的是检查网络
					netstate = true;
					// 处理是否自动登录
					//loginResult = RegisterServiceImpl.loginAuto(act);
					loginResult=true;
					// 删除过期图片
					//ImageServiceImpl.deleteTimeoutImage(act);
					handler.sendEmptyMessage(0);
				} catch (Exception e) {
					e.printStackTrace();
					handler.sendEmptyMessage(1);
				}
			}
		}.start();

	}

	public void goHomePage(String cityname) {
		Intent intent = new Intent();
		Bundle bd = new Bundle();
		bd.putString("cityname", cityname);
		intent.putExtras(bd);
		intent.setClass(this, Framework.class);
		startActivity(intent);
		finish();
	}

	/**
	 * Description: 网络出错时提示对话框
	 * 
	 * @Version1.0 2011-12-7 上午11:16:33 mustang created
	 */
	public void showDialog() {
		new AlertDialog.Builder(this).setIcon(R.drawable.alert_dialog_icon).setTitle("请求超时，请检查网络。")
				.setPositiveButton("重试", new DialogInterface.OnClickListener() {
					public void onClick(DialogInterface dialog, int whichButton) {
						// 再次调用检测网路的方法
					}
				}).setNegativeButton("取消", new DialogInterface.OnClickListener() {
					public void onClick(DialogInterface dialog, int whichButton) {
						act.finish();
					}
				}).create().show();
	}

	/**
	 * 关闭滚动条,所有和视图相关的操作都要放在这里做，新启的线程是不能操作视图控件的。
	 */
	private Handler handler = new Handler() {
		@Override
		public void handleMessage(Message msg) {
			switch (msg.what) {
			case 0:
				if (netstate) {
					progressBar.setVisibility(View.GONE);
					gridView.setOnItemClickListener(new ItemClickListener());
				} else {
					showDialog();
				}
				if (loginResult == false) {
					AlertUtils.displayToast(act, "您的用户信息发生过变更，可以重新登录同步信息。");
				} else {
					goHomePage("");
				}
				break;
			case 1: {
				AlertUtils.displayToast(act, "网络连接出现异常。");
				gridView.setOnItemClickListener(null); //TODO 正式联网时需要设置为null,网路不通不能进入子页面
				
			}
				break;
			}
		}

	};

	public static List<Map<String, Object>> getTestData() {
		List<Map<String, Object>> list = new ArrayList<Map<String, Object>>();
		Map<String, Object> map1 = new HashMap<String, Object>();
		map1.put("ItemText", "山东青州");
		Map<String, Object> map2 = new HashMap<String, Object>();
		map2.put("ItemText", "福建漳州");
		list.add(map1);
		list.add(map2);
		return list;
	}

	class ItemClickListener implements OnItemClickListener {
		public void onItemClick(AdapterView<?> arg0,// The AdapterView where the
													// click happened
				View arg1,// The view within the AdapterView that was clicked
				int arg2,// The position of the view in the adapter
				long arg3// The row id of the item that was clicked
		) {
			HashMap<String, Object> map = (HashMap<String, Object>) arg0.getItemAtPosition(arg2);
			goHomePage((String) map.get("ItemText"));

		}
	}
}
