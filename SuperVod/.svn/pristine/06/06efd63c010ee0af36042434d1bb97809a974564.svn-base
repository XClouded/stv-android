package com.stv.supervod.activity;

import android.app.AlertDialog;
import android.app.NotificationManager;
import android.app.ProgressDialog;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.IntentFilter;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.util.Log;
import android.view.GestureDetector;
import android.view.MotionEvent;
import android.view.View;
import android.view.View.OnTouchListener;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.SeekBar;
import android.widget.SeekBar.OnSeekBarChangeListener;
import android.widget.TextView;
import android.widget.Toast;

import com.stv.supervod.utils.ChangeGestureDetector;
import com.stv.supervod.utils.VideoConstant;


/**
 * @author      Administrator
 * @description 播放控制页面
 * @authority   激活用户
 * @function    用户点击播放、暂停、快进、快退、上一个，下一个、进度条、停止播放进行相应功能操作
 */
public class Play extends BaseActivity{
	private ImageButton playBtn = null;//播放、暂停	
	private ImageButton forwardBtn = null;//快进
	private ImageButton rewindBtn = null;//快退
	private Button stopBtn=null;//停止
	private TextView playtime = null;//已播放时间
	private TextView durationTime = null;//视频时间
	private TextView videoName;
	public SeekBar seekbar = null;//视频进度	
	
	private int currentPosition=0;//当前播放位置
	private int duration;//视频时长
	private int scale=1;//播放倍速
		
	private static final int STATE_PLAY = 1;
	private static final int STATE_PAUSE = 2;
	
	private int flag=1;
	private int i;
	private boolean isApplyService;
	private boolean isPlaySuccess=false;
	private TextView name = null;
    private Handler handler=new Handler();//处理进度条更新
    private Bundle bundle;
	private GestureDetector gestureDetector;
	private ProgressDialog conDialog;//连接vod服务器对话框

	@Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.play); 
//        service=new VideoService(this);
        bundle=getIntent().getExtras();        
        String name=bundle.getString("name");
        conDialog=new ProgressDialog(this);
                  
		gestureDetector=new GestureDetector(new ChangeGestureDetector(this));	//手势识别
        //视频名称
		videoName=(TextView)findViewById(R.id.video_name_view);
		videoName.setText(name);
        //响应返回事件
        Button btn=(Button) this.findViewById(R.id.play_btn_back);
        btn.setOnClickListener(new View.OnClickListener() {
			
			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub	
				if(isPlaySuccess){
					callService();
					Play.this.moveTaskToBack(true);
				}else{
					showErrorInfo();
				}
				
			}			
		});
        //响应播放、暂停事件
        playBtn = (ImageButton)findViewById(R.id.playBtn);       
//		playBtn.setBackgroundResource(R.drawable.pause_selecor);
		playBtn.setOnClickListener(new View.OnClickListener() {
			
			@Override
			public void onClick(View v) {
				switch (flag) {
				case STATE_PLAY:
					playControl();
					break;

				case STATE_PAUSE:
					pause();
					break;
				}
			}
		});
		//响应停止播放事件
		stopBtn=(Button)findViewById(R.id.play_stop);
		stopBtn.setOnClickListener(new View.OnClickListener() {
			
			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				stop();
				handler.removeCallbacks(runnable);
				flag = STATE_PLAY;
				playBtn.setBackgroundResource(R.drawable.play_selecor);
			    cancleNotification();
				Play.this.finish();
			}
		});
				
		//响应快退事件
		rewindBtn = (ImageButton)findViewById(R.id.backwordBtn);
		rewindBtn.setOnTouchListener(new OnTouchListener() {
			
			@Override
			public boolean onTouch(View v, MotionEvent event) {
				switch (event.getAction()) {
				case MotionEvent.ACTION_DOWN:				
					rewind();
					break;
//				case MotionEvent.ACTION_UP:
//					play();
//					break;
				}
				return true;
			}
		});
		//响应快进事件
		forwardBtn = (ImageButton)findViewById(R.id.forwardBtn);
		forwardBtn.setOnTouchListener(new OnTouchListener() {
			
			@Override
			public boolean onTouch(View v, MotionEvent event) {
				switch (event.getAction()){
				case MotionEvent.ACTION_DOWN:					
					forward();
					break;
//				case MotionEvent.ACTION_UP:
//					play();
//					break;
				}
				return true;
			}
		});
		//响应拖动滚动条事件
		seekbar = (SeekBar)findViewById(R.id.seekbar);
		seekbar.setMax(100);
		seekbar.setOnSeekBarChangeListener(new OnSeekBarChangeListener() {
			
			@Override
			public void onStopTrackingTouch(SeekBar seekBar) {

			}
			
			@Override
			public void onStartTrackingTouch(SeekBar seekBar) {

			}
			
			@Override
			public void onProgressChanged(SeekBar seekBar, int progress,
					boolean fromUser) {				
				if (fromUser){
					handler.removeCallbacks(runnable);
					seekbar_change(progress);
				}
			}
		});
		
		playtime=(TextView)findViewById(R.id.playtime);
		durationTime=(TextView)findViewById(R.id.duration);
//	 showConInfo(conDialog);//提示登录信息        
		
		init();
		applyService();
    }
	
     protected void showErrorInfo() {
    	 new AlertDialog.Builder(Play.this)
			.setTitle(R.string.tip)
			.setMessage("很抱歉，出错了！网络连接失败" )
			.setPositiveButton(R.string.confirm, new DialogInterface.OnClickListener() {
				@Override
				public void onClick(DialogInterface dialog, int which) {
					Play.this.finish();
				}
			})
			.show();
		
	}

	protected void cancleNotification() {
		// TODO Auto-generated method stub
    	 NotificationManager mgr=(NotificationManager) this.getSystemService(NOTIFICATION_SERVICE);
    	 mgr.cancel(R.id.app_notification_id);		
	}

	private void play(Bundle bundle) {
		// TODO Auto-generated method stub
        flag = STATE_PAUSE;
 		playBtn.setBackgroundResource(R.drawable.pause_selecor);
 		Intent intent=new Intent();
		intent.putExtra("op", VideoConstant.PLAY);
		intent.putExtra("info", bundle);
		intent.setAction(VideoConstant.FILTER_ACTION);		                
		startService(intent);		
	}

   
	@Override
	protected void onStart() {
		// TODO Auto-generated method stub
		super.onStart();
		
	}

	private void init(){
		IntentFilter filter = new IntentFilter();
		filter.addAction(VideoConstant.VIDEO_CURRENT);
		filter.addAction(VideoConstant.VIDEO_DURATION);
		filter.addAction(VideoConstant.VIDEO_NEXT);	
		filter.addAction("com.supervod.applyService");	
		filter.addAction("com.supervod.play");
		filter.addAction("com.supervod.pause");
		filter.addAction("com.supervod.forward");
		filter.addAction("com.supervod.backward");
		filter.addAction("com.supervod.sysmsg");
		filter.addAction("com.supervod.error");
		registerReceiver(videoReceiver, filter);
	}

	private void rewind() {
		handler.removeCallbacks(runnable);
		flag = STATE_PLAY;
		playBtn.setBackgroundResource(R.drawable.play_selecor);
		Intent intent=new Intent();
		intent.putExtra("op", VideoConstant.VIDEO_REWIND);
		intent.setAction(VideoConstant.FILTER_ACTION);		                
		startService(intent);
		
	}

	private void forward() {
		handler.removeCallbacks(runnable);
		flag = STATE_PLAY;		
		playBtn.setBackgroundResource(R.drawable.play_selecor);
		Intent intent=new Intent();
		intent.putExtra("op", VideoConstant.VIDEO_FORWARD);
		intent.setAction(VideoConstant.FILTER_ACTION);		                
		startService(intent);
	}
		

	//播放
	private void playControl() {
		// TODO Auto-generated method stub			
		flag = STATE_PAUSE;		
		playBtn.setBackgroundResource(R.drawable.pause_selecor);
		Intent intent=new Intent();
		intent.putExtra("op", VideoConstant.VIDEO_PLAY);
		intent.setAction(VideoConstant.FILTER_ACTION);		                
		startService(intent);		
	}
  @Override
	protected void onDestroy() {
		// TODO Auto-generated method stub
		super.onDestroy();
		unregisterReceiver(videoReceiver);
		
	}

	//暂停
	private void pause() {
		// TODO Auto-generated method stub
		handler.removeCallbacks(runnable);
		flag = STATE_PLAY;
		playBtn.setBackgroundResource(R.drawable.play_selecor);
		Intent intent=new Intent();
		intent.putExtra("op", VideoConstant.VIDEO_PAUSE);
		intent.setAction(VideoConstant.FILTER_ACTION);
		startService(intent);
//		showInfo("pause");
	}
	/**
	 * 用户拖动进度条
	 */
	private void seekbar_change(int progress){	
		flag = STATE_PAUSE;		
		playBtn.setBackgroundResource(R.drawable.pause_selecor);
		Toast.makeText(this, "改变进度条"+progress, Toast.LENGTH_LONG).show();
		Intent intent = new Intent();		
		intent.setAction(VideoConstant.FILTER_ACTION);
		intent.putExtra("op", VideoConstant.PROGRESS_CHANGE);
		intent.putExtra("progress", progress);
		startService(intent);
		
	}
	

	//响应返回事件
	private void callService() {
		// TODO Auto-generated method stub
		Intent intent=new Intent();
//		intent.addCategory(Intent.CATEGORY_HOME); 
//		intent.setFlags(Intent.FLAG_ACTIVITY_RESET_TASK_IF_NEEDED|Intent.FLAG_ACTIVITY_NEW_TASK);
		intent.putExtra("op", VideoConstant.BACK);
		intent.setAction(VideoConstant.FILTER_ACTION);		                
		startService(intent);
	}
	//申请服务
	private void applyService() {		
		
		Intent intent=new Intent();
		intent.putExtra("op", VideoConstant.VIDEO_APPLY_SERVICE);
		intent.setAction(VideoConstant.FILTER_ACTION);		                
		startService(intent);
		
		
	}

	//停止播放
	private void stop(){
		// TODO Auto-generated method stub
		Intent intent=new Intent();
		intent.putExtra("op", VideoConstant.VIDEO_STOP);
		intent.setAction(VideoConstant.FILTER_ACTION);		                
		startService(intent);
	}
			
	Handler updateProgress=new Handler(){
		@Override
		public void handleMessage(Message msg){ 
			playtime.setText(toTime(msg.arg1));
		}
	};
	/**
	 * 定义videoReceiver,接收VideoService发送的广播
	 */
	protected BroadcastReceiver videoReceiver = new BroadcastReceiver() {
		
		@Override
		public void onReceive(Context context, Intent intent) {
			Log.d("-----------------------------", "-------------------------");
			String action = intent.getAction();
			if (action.equals(VideoConstant.VIDEO_CURRENT)){
				currentPosition =  intent.getExtras().getInt("currentTime");//获得当前播放位置
//				playtime.setText(toTime(currentPosition));
				duration =intent.getExtras().getInt("duration");
				seekbar.setMax(duration);
				seekbar.setProgress(currentPosition);//设置进度条
				
			} 
			else if(action.equals("com.supervod.play")){
				isPlaySuccess=true;//成功播放
				String info=intent.getExtras().getString("info");								
				currentPosition =  intent.getExtras().getInt("nptBegin");//获得当前播放位置	
                if(intent.getExtras().getString("isplaycontrol")!=null){                  	
                   scale=intent.getExtras().getByte("scale");
                   Toast.makeText(Play.this, scale+"X", Toast.LENGTH_LONG).show();
				}else{
				   Toast.makeText(Play.this, info, Toast.LENGTH_LONG).show();
				   duration =intent.getExtras().getInt("nptTotal");	
				   scale=1;
				}
											
				seekbar.setMax(duration);
				durationTime.setText(toTime(duration));//设置播放时长
				seekbar.setProgress(currentPosition);
				//progressHandler.post(handlerThread);
				handler.postDelayed(runnable,2000);
				
			}
			else if(action.equals("com.supervod.error")){
				String info=intent.getExtras().getString("error");
				new AlertDialog.Builder(Play.this)
				.setTitle(R.string.tip)
				.setMessage("很抱歉，出错了！" + info)
				.setPositiveButton(R.string.confirm, new DialogInterface.OnClickListener() {
					@Override
					public void onClick(DialogInterface dialog, int which) {
						Play.this.finish();
//						unregisterReceiver(videoReceiver);
					}
				})
				.show();
				
			}
			else if(action.equals("com.supervod.applyService")){
//				currentPosition =  intent.getExtras().getInt("nptBegin");//获得当前播放位置
//				playtime.setText(toTime(currentPosition));
//				duration =intent.getExtras().getInt("nptTotal");
				play(bundle);//申请服务成功开始播放视频
//				Toast.makeText(Play.this, currentPosition+","+duration, 1000).show();
//				seekbar.setMax(duration);
//				seekbar.setProgress(currentPosition);//设置进度条
				
			}
			else if(action.equals("com.supervod.sysmsg")){
				Toast.makeText(Play.this, "播放完成", Toast.LENGTH_LONG).show();
				currentPosition=0;
				seekbar.setProgress(currentPosition);
				flag = STATE_PLAY;
				handler.removeCallbacks(runnable);
				playBtn.setBackgroundResource(R.drawable.play_selecor);
				
			}
			else if(action.equals("com.supervod.pause")){
				String info=intent.getExtras().getString("info");
				Toast.makeText(Play.this, info, Toast.LENGTH_LONG).show();
			}
		}
	};
	/**
	 * 时间格式转换函数
	 * @param time
	 * @return
	 */
	public String toTime(int time) {

//		time /= 1000;
		int minute = time / 60;
		int hour = minute / 60;
		int second = time % 60;
		minute %= 60;
		return String.format("%02d:%02d", minute, second);
	}
	 
	Runnable runnable=new Runnable(){
		
		@Override
			public void run() {
		
			    handler.postDelayed(runnable, 1000);			    
				currentPosition = currentPosition +1*scale ;
		     	playtime.setText(toTime(currentPosition));
 			    seekbar.setProgress(currentPosition);
			    if(currentPosition>=duration||currentPosition<=0){
			    	handler.removeCallbacks(runnable);
			    }			    				
			}
			
		};	
	
	
}