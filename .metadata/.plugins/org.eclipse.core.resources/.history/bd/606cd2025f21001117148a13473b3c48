package com.stv.supervod.activity;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.stv.supervod.service.RegisterServiceImpl;
import com.stv.supervod.utils.AlertUtils;

import android.app.Activity;
import android.app.AlertDialog;
import android.content.DialogInterface;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.view.View;
import android.widget.Button;
import android.widget.Gallery;
import android.widget.GridView;
import android.widget.ProgressBar;
import android.widget.SimpleAdapter;

/**
 * @author Administrator
 * @description 欢迎页面
 * @authority 所有用户
 * @function 1、建立网络连接，选择服务器 2、用户份判断，记住登录信息用户自动登录到服务器
 *           3、遍历存放图片文件夹，删除最后访问时间大于本地时间3天的图片，同步数据库
 */
public class Welcome extends BaseActivity {

	Activity act = this;
	ProgressBar progressBar;
/*	Button qingzhou;
	Button zhangzhou;*/
	private static boolean netstate = true;
	private boolean loginResult = false;
	private Gallery ge;

	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.welcome);
		progressBar = (ProgressBar) this.findViewById(R.id.progressBar);
		/*qingzhou = (Button) this.findViewById(R.id.qingzhou);
		zhangzhou = (Button) this.findViewById(R.id.zhangzhou);
		qingzhou.setEnabled(false);
		zhangzhou.setEnabled(false);*/
		
		
		  SimpleAdapter adp = new SimpleAdapter(this,
				  getTestData(),
					R.layout.city_item,
					new String[] {"ItemText"},
					new int[] { R.id.GridItemText});
		GridView gridView = (GridView)findViewById(R.id.gridview);
		gridView.setDrawSelectorOnTop(true);
	    gridView.setAdapter(adp);
		
		
		//暂时看看效果，以后会删掉
		new Thread() {
			public void run() {
				try {
					sleep(3000);
					//TODO 1、这里真正要做的是检查网络
					netstate = true;
					loginResult = RegisterServiceImpl.loginAuto(act);
					handler.sendEmptyMessage(0);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		}.start();
		
		
	}

	public void goHomePage(View view) {
		int id = view.getId();
		Intent intent = new Intent();
		Bundle bd = new Bundle();
		bd.putInt("cityid", id);
		intent.putExtras(bd);
		intent.setClass(this, Framework.class);
		startActivity(intent);
		finish();
	}

	/**
	 * Description: 网络出错时提示对话框
	 * 
	 * @Version1.0 2011-12-7 上午11:16:33 mustang created
	 */
	public void showDialog() {
		new AlertDialog.Builder(this)
				.setIcon(R.drawable.alert_dialog_icon)
				.setTitle("请求超时，请检查网络。")
				.setPositiveButton("重试", new DialogInterface.OnClickListener() {
					public void onClick(DialogInterface dialog, int whichButton) {
						// 再次调用检测网路的方法
					}
				})
				.setNegativeButton("取消", new DialogInterface.OnClickListener() {
					public void onClick(DialogInterface dialog, int whichButton) {
						act.finish();
					}
				}).create().show();
	}

	/**
	 * 关闭滚动条,所有和视图相关的操作都要放在这里做，新启的线程是不能操作视图控件的。
	 */
	private Handler handler = new Handler() {
		@Override
		public void handleMessage(Message msg) {
			if (netstate) {
				//qingzhou.setEnabled(true);
				//zhangzhou.setEnabled(true);
				progressBar.setVisibility(View.GONE);
			} else{
				showDialog();
			}
			if(loginResult==false){
				AlertUtils.displayToast(act, "您的用户信息发生过变更，可以重新登录同步信息。");
			}
		}
	};
	
	
	public static List<Map<String, Object>> getTestData() {
		List<Map<String, Object>> list = new ArrayList<Map<String, Object>>();
			Map<String, Object> map1 = new HashMap<String, Object>();
			map1.put("ItemText", "山东青州");
			Map<String, Object> map2 = new HashMap<String, Object>();
			map2.put("ItemText", "福建漳州");
			list.add(map1);
			list.add(map2);
		return list;
	}
}
